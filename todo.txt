--todo

*mkvmerge for encodes

Front End (EAC3ToConfiguration has an Extension Method that tells the number of episodes, you can use this for the drop down box column):
	1) Besides the logic for Episode Name, remove checks for IsRemux on BluRay Title Info Screen, so encode mode can access mkvmerge controls -done
	2) Load and maybe Save (.batchGuyEac3toSettings) on x264 Screen
	3) Disable controls until it is loaded
	4) Add new property called episode number on X264File Model -done
	5) Add new drop down for X264File.EpisodeNumber (string) and make it a drop down and figure out hwo to load with the number of episodes -done
	*6) When they try to make the mkvmerge file, validate that all episodes mapped and all unique
	*7) Before saving, shove the filepath/name of encode into the bluraysummary.titleinfo.episodename based on the episode number drop down
	

Back End:
	1) Create new MKVMerge\Services\MKVMergeBatchFileWriteForEncodeService and inherit from IMKVMergeBatchFileWriteService
	2) Looks like the constructor will need the X264File list and X264FileSettings 
	3) For MKVMergeBatchFileWriteForEncodeService.IsValid, here you can check to see if all X264Files.EpisodeNumber has a value and they are unique or let #6 on Front End do it
	4) Make a private method to do #7 on Front End or maybe let the Front End do it
	5) Make EAC3ToConfiguration.IsVideoNameForMkvMerge
	6) EncodeTemplate1EAC3ToOutputNamingService.GetVideoName, use EAC3ToConfiguration.IsVideoNameForMkvMerge to determine hardcoded name or episode name, which will have bluraysummary.titleinfo.episodename


--possible nice to haves
*On the Create x264 Batch File, add functionality load (.batchGuyEac3toSettings), so you can have the eac3to and mkvmerge info to create an mkvmerge batch file
-Either use If statement or create a new abstract class and move all current mkvmerge logic (except video) to a base class and have a remux/none-remux sub class
-Understand that you can re-use 99% of current mkvmerge service functionality, only with ecnoder mux, they supply you the video name, it isn't auto-created
-Enable mkvmerge section on BluRay Title Info Screen all the time
-Allow user to load the (.batchGuyEac3toSettings) on the Create x264 Batch File Screen
-Once (.batchGuyEac3toSettings), add a new drop down column to the grid that has the episode numbers, so they can be matched with the avs/encode name


*Default the MKVToolNixGUI Track Name to "Commentary" if commentary checkbox is checked
*When a single file contains multiple episodes :
	1) Go by the actually episode number entered in the loop
	2) Validate on the screen


*Trimming white spaces from the encode names on the Create x264 Batch File
*Create a batchguy log file that indicates how many files were processed and how long it took
*Make the Season Number on Create eac3to Batch File optional (so movies can be remuxed)


*Rename EnumBluRayLineItemType to have eac3to in the title, to prepare for tsMuxeR OR Make the identifylineitem service generic to pass in any enum or a combo of these
*Research and start laying down the foundation for tsMuxeR
-Understand the cli
-Understand that you have to now introduce mkvmerge cli to mux the .h264 file into an mkv
-Understand that 2 new exes have be tracked, mkvmerge and tsMuxeR
-Understand that you will have to use eac3to for .wav


*maybe add a check all checkbox to grids with is selected
-http://dotnetvisio.blogspot.com/2015/08/create-select-all-checkbox-column.html

*figure out a better solution to inform of the status of long running tasks
*ability to create sample.avs/sample.encode.bat
*Ability to set the video variable for avisynth for advanced scripting
