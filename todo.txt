--todo
Enhancements:
*Before writing to any Batch File, the application now checks to see if the Batch File exists and will delete it, to prevent appending to an existing Batch File
*List of executables on the Settings Screen is now being displayed in a grid
*On the Create AviSynth Files Screen, users can now press a button to create a ffmsindex Batch File that uses ffmsindex.exe to index all of the extracted videos that will be encoded using FFVideoSource

Bugs:
*Fixed bug where all BatchGuy last directories settings were being cleared when saving information on the Settings Screen
*Fixed bug where if the user clicked on the header row of the BluRay Title Info Defaults Grid on the Settings Screen, the application would throw an exception


*Ctrl+s or other shortkeys
*Automatically sort the AviSynth Grid by AviSynth File Name when users add (.avs) files to the grid
*Create a Settings Seed Class that handles creating default data, move the ffmsindex and the last 2 new settings into this class to keep it all in one place
*Trimming white spaces from the encode names on the Create x264 Batch File


--possible nice to haves
*Maybe start checking to see if batch files exist first, if so delete them before writing to them

ExtensionMethods.NumberOfEpisodes needs to filter on summary.episodenumber != null as well for cases where isselected by no episode number.  Not changing it now due to not knowing what the effects are

*Default the MKVToolNixGUI Track Name to "Commentary" if commentary checkbox is checked
*When a single file contains multiple episodes :
	1) Go by the actually episode number entered in the loop
	2) Validate on the screen



*Create a batchguy log file that indicates how many files were processed and how long it took
*Make the Season Number on Create eac3to Batch File optional (so movies can be remuxed)


*Rename EnumBluRayLineItemType to have eac3to in the title, to prepare for tsMuxeR OR Make the identifylineitem service generic to pass in any enum or a combo of these
*Research and start laying down the foundation for tsMuxeR
-Understand the cli
-Understand that you have to now introduce mkvmerge cli to mux the .h264 file into an mkv
-Understand that 2 new exes have be tracked, mkvmerge and tsMuxeR
-Understand that you will have to use eac3to for .wav


*maybe add a check all checkbox to grids with is selected
-http://dotnetvisio.blogspot.com/2015/08/create-select-all-checkbox-column.html

*figure out a better solution to inform of the status of long running tasks
*ability to create sample.avs/sample.encode.bat
*Ability to set the video variable for avisynth for advanced scripting
