--todo

*Allow the user to choose different remux naming convention templates

	Template 1 (Encode) - Existing naming convention for Encodes (no change, just give it its own strategy)
	Template 2 (Remux) -  TV Show S01E01 Episode Name 1080p Remux AVC FLAC5.1-Tag.mkv (no change, just give it its own strategy)
	Template 3 (Remux) -  TV Show, S01E01 (Year).mkv
	Template 4 (Remux) -  2x01 Episode Name.mkv



AbstractEAC3ToOutputNamingService -done
	EncodeTemplate1EAC3ToOutputNamingService -done
	RemuxTemplate1EAC3ToOutputNamingService
	RemuxTemplate2EAC3ToOutputNamingService
	RemuxTemplate3EAC3ToOutputNamingService

*Obsolete when done
	IEAC3ToOutputNamingService
	EAC3ToOutputNamingService


How to implement:
1) Re-name and use IEAC3ToOutputNamingService as a base Interface (or convert to Abstract Class) for all template naming services to inherit from
2) Create a Factory Method or Pattern to figure out which Strategy to return, it will need BG Settings Object and EAC3ToConfiguration (use this for batch file creation)
3) Inject this newly re-named service in EAC3ToBatchFileWriteService, right now, it is created inside of this class
4) For now, keep the validation and warning the same ie centralized, no matter the template they choose
5) When creating the eac3to and mkvmerge batch file, use the factory to determine which naming service strategy to return
6) Obviously Unit Test and update Unit Test where necessary

--possible nice to haves
*On the Create x264 Batch File, add functionality load (.batchGuyEac3toSettings), so you can have the eac3to and mkvmerge info to create an mkvmerge batch file
-Either use If statement or create a new abstract class and move all current mkvmerge logic (except video) to a base class and have a remux/none-remux sub class
-Understand that you can re-use 99% of current mkvmerge service functionality, only with ecnoder mux, they supply you the video name, it isn't auto-created
-Enable mkvmerge section on BluRay Title Info Screen all the time
-Allow user to load the (.batchGuyEac3toSettings) on the Create x264 Batch File Screen
-Once (.batchGuyEac3toSettings), add a new drop down column to the grid that has the episode numbers, so they can be matched with the avs/encode name


*Default the MKVToolNixGUI Track Name to "Commentary" if commentary checkbox is checked
*When a single file contains multiple episodes :
	1) Go by the actually episode number entered in the loop
	2) Validate on the screen


*Trimming white spaces from the encode names on the Create x264 Batch File
*Create a batchguy log file that indicates how many files were processed and how long it took
*Make the Season Number on Create eac3to Batch File optional (so movies can be remuxed)


*Rename EnumBluRayLineItemType to have eac3to in the title, to prepare for tsMuxeR OR Make the identifylineitem service generic to pass in any enum or a combo of these
*Research and start laying down the foundation for tsMuxeR
-Understand the cli
-Understand that you have to now introduce mkvmerge cli to mux the .h264 file into an mkv
-Understand that 2 new exes have be tracked, mkvmerge and tsMuxeR
-Understand that you will have to use eac3to for .wav


*maybe add a check all checkbox to grids with is selected
-http://dotnetvisio.blogspot.com/2015/08/create-select-all-checkbox-column.html

*figure out a better solution to inform of the status of long running tasks
*ability to create sample.avs/sample.encode.bat
*Ability to set the video variable for avisynth for advanced scripting
